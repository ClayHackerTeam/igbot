import * as CONSTANTS from './constants/constants';
import * as routes from './core/routes';
import { Device } from './core/devices/device';
import { CookieStorage } from './core/cookies/cookie-storage';
import { CookieFileStorage } from './core/cookies/cookie-file-storage';
import { CookieMemoryStorage } from './core/cookies/cookie-memory-storage';
import * as Exceptions from './core/exceptions';
import { InstagramResource as Resource } from './v1/resource';
import { Request } from './core/request';
import { Session } from './core/session';
import { Account } from './v1/account';
import { Media } from './v1/media';
import { Like } from './v1/like';
import { Comment } from './v1/comment';
import { Hashtag } from './v1/hashtag';
import { Link } from './v1/link';
import { Placeholder } from './v1/placeholder';
import { Location } from './v1/location';
import { Relationship } from './v1/relationship';
import { Thread } from './v1/thread';
import { ThreadItem } from './v1/thread-item';
import { QE } from './v1/qe';
import { Internal } from './v1/internal';
import { Upload } from './v1/upload';
import { Save } from './v1/save';
import { AccountCreator, AccountEmailCreator, AccountPhoneCreator } from './v1/account-creator';
import { AccountFollowersFeed as AccountFollowers } from './feeds/account-followers.feed';
import { AccountFollowingFeed as AccountFollowing } from './feeds/account-following.feed';
import { InboxFeed as Inbox } from './feeds/inbox.feed';
import { InboxPendingFeed as InboxPending } from './feeds/inbox-pending.feed';
import { LocationMediaFeed as LocationMedia } from './feeds/location-media.feed';
import { TaggedMediaFeed as TaggedMedia } from './feeds/tagged-media.feed';
import { ThreadItemsFeed as ThreadItems } from './feeds/thread-items.feed';
import { TimelineFeed as Timeline } from './feeds/timeline.feed';
import { UserMediaFeed as UserMedia } from './feeds/user-media.feed';
import { SelfLikedFeed as SelfLiked } from './feeds/self-liked.feed';
import { MediaCommentsFeed as MediaComments } from './feeds/media-comments.feed';
import { SavedMediaFeed as SavedMedia } from './feeds/saved-media.feed';
import { StoryTrayFeed } from './feeds/story-tray.feed';
import { UserStoryFeed } from './feeds/user-story.feed';
import { StoryViewersFeed } from './feeds/story-viewers.feed';
import { WebRequest } from './core/web-request';
import { Challenge, EmailVerificationChallenge, NotImplementedChallenge, PhoneVerificationChallenge } from './v1/challenge';
declare const InstagramV1: {
    CONSTANTS: typeof CONSTANTS;
    routes: typeof routes;
    Device: typeof Device;
    CookieStorage: typeof CookieStorage;
    CookieFileStorage: typeof CookieFileStorage;
    CookieMemoryStorage: typeof CookieMemoryStorage;
    Exceptions: typeof Exceptions;
    prunedJson: (value: any, depthDecr?: any, arrayMaxLength?: any) => any;
    Resource: typeof Resource;
    Request: typeof Request;
    Session: typeof Session;
    Account: typeof Account;
    Media: typeof Media;
    Like: typeof Like;
    Comment: typeof Comment;
    Hashtag: typeof Hashtag;
    Link: typeof Link;
    Placeholder: typeof Placeholder;
    Location: typeof Location;
    Relationship: typeof Relationship;
    Thread: typeof Thread;
    ThreadItem: typeof ThreadItem;
    QE: typeof QE;
    Internal: typeof Internal;
    Upload: typeof Upload;
    discover: (session: any, inSingup: any) => any;
    Save: typeof Save;
    search: (session: any, query: any) => any;
    AccountCreator: typeof AccountCreator;
    AccountPhoneCreator: typeof AccountPhoneCreator;
    AccountEmailCreator: typeof AccountEmailCreator;
    Feed: {
        AccountFollowers: typeof AccountFollowers;
        AccountFollowing: typeof AccountFollowing;
        Inbox: typeof Inbox;
        InboxPending: typeof InboxPending;
        LocationMedia: typeof LocationMedia;
        TaggedMedia: typeof TaggedMedia;
        ThreadItems: typeof ThreadItems;
        Timeline: typeof Timeline;
        UserMedia: typeof UserMedia;
        SelfLiked: typeof SelfLiked;
        MediaComments: typeof MediaComments;
        SavedMedia: typeof SavedMedia;
        TagMedia: typeof TaggedMedia;
        StoryTrayFeed: typeof StoryTrayFeed;
        UserStoryFeed: typeof UserStoryFeed;
        StoryViewersFeed: typeof StoryViewersFeed;
    };
    Web: {
        Request: typeof WebRequest;
        Challenge: typeof Challenge;
        NotImplementedChallenge: typeof NotImplementedChallenge;
        EmailVerificationChallenge: typeof EmailVerificationChallenge;
        PhoneVerificationChallenge: typeof PhoneVerificationChallenge;
    };
};
export default InstagramV1;
